// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Random is an autogenerated mock type for the Random type
type Random struct {
	mock.Mock
}

// Int63n provides a mock function with given fields: value
func (_m *Random) Int63n(value int64) int64 {
	ret := _m.Called(value)

	if len(ret) == 0 {
		panic("no return value specified for Int63n")
	}

	var r0 int64
	if rf, ok := ret.Get(0).(func(int64) int64); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// NewRandom creates a new instance of Random. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRandom(t interface {
	mock.TestingT
	Cleanup(func())
}) *Random {
	mock := &Random{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
